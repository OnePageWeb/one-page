{
  "name": "小游戏-点击特效",
  "desc": "简单的游戏，通过点击或滑动来生成图形",
  "tags": ["html", "game"],
  "config": "{\"text\":\"<!DOCTYPE html>\\n<html lang=\\\"zh\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>解压线条风格游戏</title>\\n  <style>\\n    body {\\n      margin: 0;\\n      overflow: hidden;\\n      background: transparent; /* 背景透明化 */\\n    }\\n    canvas {\\n      display: block;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <canvas id=\\\"canvas\\\"></canvas>\\n  <script>\\n    const canvas = document.getElementById(\\\"canvas\\\");\\n    const ctx = canvas.getContext(\\\"2d\\\");\\n    resizeCanvas();\\n\\n    window.addEventListener(\\\"resize\\\", resizeCanvas);\\n    function resizeCanvas() {\\n      canvas.width = window.innerWidth;\\n      canvas.height = window.innerHeight;\\n    }\\n\\n    const shapes = [];\\n    const colors = [\\\"#6ec6ff\\\", \\\"#ffb74d\\\", \\\"#81c784\\\", \\\"#ba68c8\\\", \\\"#ff8a65\\\"];\\n    const types = [\\\"circle\\\", \\\"square\\\", \\\"triangle\\\", \\\"star\\\", \\\"diamond\\\"];\\n\\n    function randomBetween(min, max) {\\n      return Math.random() * (max - min) + min;\\n    }\\n\\n    function createShape(x, y) {\\n      const type = types[Math.floor(Math.random() * types.length)];\\n      const color = colors[Math.floor(Math.random() * colors.length)];\\n      const size = randomBetween(20, 50);\\n      const life = randomBetween(1000, 2000); // 生命周期 1s 到 2s\\n      shapes.push({ x, y, type, color, size, start: Date.now(), life });\\n    }\\n\\n    function drawShape(shape, alpha) {\\n      ctx.strokeStyle = shape.color;\\n      ctx.globalAlpha = alpha;\\n      ctx.lineWidth = 2;\\n\\n      ctx.beginPath();\\n      switch (shape.type) {\\n        case \\\"circle\\\":\\n          ctx.arc(shape.x, shape.y, shape.size * alpha, 0, Math.PI * 2);\\n          break;\\n        case \\\"square\\\":\\n          ctx.rect(shape.x - shape.size * alpha / 2, shape.y - shape.size * alpha / 2, shape.size * alpha, shape.size * alpha);\\n          break;\\n        case \\\"triangle\\\":\\n          ctx.moveTo(shape.x, shape.y - shape.size * alpha / 2);\\n          ctx.lineTo(shape.x - shape.size * alpha / 2, shape.y + shape.size * alpha / 2);\\n          ctx.lineTo(shape.x + shape.size * alpha / 2, shape.y + shape.size * alpha / 2);\\n          ctx.closePath();\\n          break;\\n        case \\\"star\\\":\\n          for (let i = 0; i < 5; i++) {\\n            const angle = (Math.PI * 2 / 5) * i - Math.PI / 2;\\n            const x = shape.x + Math.cos(angle) * shape.size * alpha;\\n            const y = shape.y + Math.sin(angle) * shape.size * alpha;\\n            if (i === 0) ctx.moveTo(x, y);\\n            else ctx.lineTo(x, y);\\n          }\\n          ctx.closePath();\\n          break;\\n        case \\\"diamond\\\":\\n          ctx.moveTo(shape.x, shape.y - shape.size * alpha / 2);\\n          ctx.lineTo(shape.x - shape.size * alpha / 2, shape.y);\\n          ctx.lineTo(shape.x, shape.y + shape.size * alpha / 2);\\n          ctx.lineTo(shape.x + shape.size * alpha / 2, shape.y);\\n          ctx.closePath();\\n          break;\\n      }\\n      ctx.stroke();\\n      ctx.globalAlpha = 1.0;\\n    }\\n\\n    function animate() {\\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\\n      const now = Date.now();\\n      for (let i = shapes.length - 1; i >= 0; i--) {\\n        const shape = shapes[i];\\n        const elapsed = now - shape.start;\\n        if (elapsed > shape.life) {\\n          shapes.splice(i, 1);\\n          continue;\\n        }\\n        const alpha = 1 - elapsed / shape.life;\\n        drawShape(shape, alpha);\\n      }\\n      requestAnimationFrame(animate);\\n    }\\n\\n    let lastTime = 0;\\n    canvas.addEventListener(\\\"mousemove\\\", (e) => {\\n      const now = Date.now();\\n      if (now - lastTime > 100) { // 拖动间隔 100ms\\n        createShape(e.clientX, e.clientY);\\n        lastTime = now;\\n      }\\n    });\\n\\n    canvas.addEventListener(\\\"click\\\", (e) => {\\n      createShape(e.clientX, e.clientY);\\n    });\\n\\n    animate();\\n  </script>\\n</body>\\n</html>\\n\",\"params\":[]}",
  "style": ".htmlContent {\n  border: 2px dashed #606060;\n  height: calc(100% - 4px);\n  width: calc(100% - 4px);\n}",
  "w": 13,
  "h": 25,
  "type": "html"
}