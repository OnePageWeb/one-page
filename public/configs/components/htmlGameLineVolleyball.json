{
  "name": "小游戏-线条排球",
  "desc": "双人排球，通过WS和上下箭头键来控制球拍，将球反弹到对方的得分区域，先得分的一方获胜",
  "tags": ["html", "game"],
  "config": "{\"text\":\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n<meta charset=\\\"UTF-8\\\">\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n<title>Line Volleyball</title>\\n<style>\\nhtml, body { margin: 0; padding: 0; overflow: hidden; background: #111; cursor: none; font-family: sans-serif; }\\ncanvas { display: block; background: #111; }\\n#overlay { position: absolute; top:0; left:0; width: 100%; height: 100%; display:flex; justify-content:center; align-items:center; background: rgba(0,0,0,0.8); color: #fff; font-size: 32px; flex-direction: column; }\\n#overlay #winnerText { margin-bottom: 20px; font-size: 40px; }\\n#overlay #startText { font-size: 28px; color: #0ff; }\\n</style>\\n</head>\\n<body>\\n<canvas id=\\\"gameCanvas\\\"></canvas>\\n<div id=\\\"overlay\\\">\\n    <div id=\\\"winnerText\\\"></div>\\n    <div id=\\\"startText\\\">Press SPACE to Start</div>\\n</div>\\n\\n<script>\\nconst canvas = document.getElementById('gameCanvas');\\nconst ctx = canvas.getContext('2d');\\nconst overlay = document.getElementById('overlay');\\nconst winnerText = document.getElementById('winnerText');\\nconst startText = document.getElementById('startText');\\n\\nlet paddleWidth = 10, paddleHeight = 100, paddleSpeed = 8, ballSize = 15;\\nlet leftPaddle, rightPaddle, ball;\\nlet keys = { w:false, s:false, up:false, down:false };\\nlet gameStarted = false;\\n\\nlet initialSpeed = 2, maxSpeed = 15;\\n\\nfunction resize() {\\n    canvas.width = window.innerWidth;\\n    canvas.height = window.innerHeight;\\n    paddleHeight = canvas.height / 6;\\n    resetGame(false);\\n}\\nwindow.addEventListener('resize', resize);\\nresize();\\n\\n// 键盘控制\\nwindow.addEventListener('keydown', e=>{\\n    if(e.key==='w') keys.w = true;\\n    if(e.key==='s') keys.s = true;\\n    if(e.key==='ArrowUp') keys.up = true;\\n    if(e.key==='ArrowDown') keys.down = true;\\n    if(e.code==='Space') {\\n        if(!gameStarted) {\\n            // 按空格触发游戏开始或重新开始\\n            resetGame(false);\\n            gameStarted = true;\\n            overlay.style.display = 'none';\\n        }\\n    }\\n});\\nwindow.addEventListener('keyup', e=>{\\n    if(e.key==='w') keys.w = false;\\n    if(e.key==='s') keys.s = false;\\n    if(e.key==='ArrowUp') keys.up = false;\\n    if(e.key==='ArrowDown') keys.down = false;\\n});\\n\\n// 初始化或重置游戏\\nfunction resetGame(showOverlay=true) {\\n    leftPaddle = { x: 30, y: canvas.height/2 - paddleHeight/2 };\\n    rightPaddle = { x: canvas.width - 30 - paddleWidth, y: canvas.height/2 - paddleHeight/2 };\\n    let angle = Math.random() * Math.PI/4 - Math.PI/8;\\n    let dir = Math.random() > 0.5 ? 1 : -1;\\n    ball = { x: canvas.width/2, y: canvas.height/2, vx: initialSpeed * Math.cos(angle) * dir, vy: initialSpeed * Math.sin(angle), trail: [] };\\n    winnerText.innerText = '';\\n    startText.innerText = 'Press SPACE to Start';\\n    if(showOverlay) overlay.style.display = 'flex';\\n}\\n\\n// 胜利显示\\nfunction showWinner(player) {\\n    winnerText.innerText = player + ' Wins!';\\n    startText.innerText = 'Press SPACE to Restart';\\n    overlay.style.display = 'flex';\\n    gameStarted = false;\\n}\\n\\n// 更新逻辑\\nfunction update() {\\n    if(!gameStarted) return;\\n    if(keys.w) leftPaddle.y -= paddleSpeed;\\n    if(keys.s) leftPaddle.y += paddleSpeed;\\n    if(keys.up) rightPaddle.y -= paddleSpeed;\\n    if(keys.down) rightPaddle.y += paddleSpeed;\\n    leftPaddle.y = Math.max(0, Math.min(canvas.height - paddleHeight, leftPaddle.y));\\n    rightPaddle.y = Math.max(0, Math.min(canvas.height - paddleHeight, rightPaddle.y));\\n\\n    ball.x += ball.vx;\\n    ball.y += ball.vy;\\n    ball.trail.push({x: ball.x, y: ball.y});\\n    if(ball.trail.length>20) ball.trail.shift();\\n    if(ball.y<0 || ball.y>canvas.height) ball.vy*=-1;\\n    let speed = Math.sqrt(ball.vx**2 + ball.vy**2);\\n    if(speed<maxSpeed){ let f=1.001; ball.vx*=f; ball.vy*=f; }\\n\\n    // 碰左板\\n    if(ball.x-ballSize/2<leftPaddle.x+paddleWidth && ball.x+ballSize/2>leftPaddle.x &&\\n       ball.y+ballSize/2>leftPaddle.y && ball.y-ballSize/2<leftPaddle.y+paddleHeight){\\n        let relativeY=(ball.y-(leftPaddle.y+paddleHeight/2))/(paddleHeight/2);\\n        let angle=relativeY*Math.PI/4;\\n        let s=Math.sqrt(ball.vx**2+ball.vy**2)*1.05;\\n        ball.vx=s*Math.cos(angle); ball.vy=s*Math.sin(angle);\\n        ball.x=leftPaddle.x+paddleWidth+ballSize/2;\\n    }\\n\\n    // 碰右板\\n    if(ball.x+ballSize/2>rightPaddle.x && ball.x-ballSize/2<rightPaddle.x+paddleWidth &&\\n       ball.y+ballSize/2>rightPaddle.y && ball.y-ballSize/2<rightPaddle.y+paddleHeight){\\n        let relativeY=(ball.y-(rightPaddle.y+paddleHeight/2))/(paddleHeight/2);\\n        let angle=relativeY*Math.PI/4;\\n        let s=Math.sqrt(ball.vx**2+ball.vy**2)*1.05;\\n        ball.vx=-s*Math.cos(angle); ball.vy=s*Math.sin(angle);\\n        ball.x=rightPaddle.x-ballSize/2;\\n    }\\n\\n    if(ball.x<0) showWinner('Right Player');\\n    if(ball.x>canvas.width) showWinner('Left Player');\\n}\\n\\n// 绘制逻辑\\nfunction draw() {\\n    ctx.fillStyle='rgba(0,0,0,0.2)';\\n    ctx.fillRect(0,0,canvas.width,canvas.height);\\n    // 中线\\n    ctx.strokeStyle='#fff'; ctx.lineWidth=2; ctx.setLineDash([10,15]);\\n    ctx.beginPath(); ctx.moveTo(canvas.width/2,0); ctx.lineTo(canvas.width/2,canvas.height); ctx.stroke(); ctx.setLineDash([]);\\n    // 板子\\n    ctx.fillStyle='#0f0'; ctx.fillRect(leftPaddle.x,leftPaddle.y,paddleWidth,paddleHeight);\\n    ctx.fillStyle='#f00'; ctx.fillRect(rightPaddle.x,rightPaddle.y,paddleWidth,paddleHeight);\\n    // 小球轨迹\\n    for(let i=0;i<ball.trail.length;i++){\\n        let t=i/ball.trail.length;\\n        ctx.fillStyle=`rgba(255,255,255,${t*0.8})`;\\n        ctx.beginPath(); ctx.arc(ball.trail[i].x,ball.trail[i].y,ballSize/2*t,0,Math.PI*2); ctx.fill();\\n    }\\n    // 小球\\n    ctx.fillStyle='#fff'; ctx.beginPath(); ctx.arc(ball.x,ball.y,ballSize/2,0,Math.PI*2); ctx.fill();\\n    // 控制提示\\n    ctx.fillStyle='#fff'; ctx.font=`${Math.floor(canvas.height/25)}px sans-serif`;\\n    ctx.textAlign='left'; ctx.fillText('Left: W / S',20,30);\\n    ctx.textAlign='right'; ctx.fillText('Right: ↑ / ↓',canvas.width-20,30);\\n    // 小球速度\\n    let speed=Math.sqrt(ball.vx**2+ball.vy**2);\\n    ctx.textAlign='center'; ctx.fillText('Ball Speed: '+speed.toFixed(2),canvas.width/2,30);\\n}\\n\\n// 游戏循环\\nfunction loop(){ update(); draw(); requestAnimationFrame(loop); }\\nresetGame(true);\\nloop();\\n</script>\\n</body>\\n</html>\\n\",\"params\":[]}",
  "style": ".htmlContent {\n  border: 2px dashed #606060;\n  height: calc(100% - 4px);\n  width: calc(100% - 4px);\n}",
  "w": 9,
  "h": 14,
  "type": "html"
}