{
  "name": "随机数",
  "desc": "从1到99随机出一个数字",
  "config": "{\"text\":\"<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>随机数字抽取</title>\\n    <style>\\n        * {\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n            scrollbar-width: none;\\n        }\\n\\n        body {\\n            min-height: 100vh;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            background-color: #f0f0f0;\\n            font-family: 'Arial', sans-serif;\\n        }\\n\\n        #number-display {\\n            font-size: 50vw;\\n            font-weight: bold;\\n            cursor: pointer;\\n            transition: all 0.3s ease;\\n            position: relative;\\n            color: #333;\\n        }\\n\\n        #number-display.highlight {\\n            animation: highlight 1s ease-out forwards;\\n        }\\n\\n        @keyframes highlight {\\n            0% {\\n                transform: scale(1);\\n                text-shadow: 0 0 20px rgba(255, 100, 0, 0.5);\\n            }\\n\\n            50% {\\n                transform: scale(1.5);\\n                text-shadow: 0 0 40px rgba(255, 100, 0, 0.8);\\n            }\\n\\n            100% {\\n                transform: scale(1);\\n                text-shadow: 0 0 30px rgba(255, 100, 0, 0.7);\\n            }\\n        }\\n    </style>\\n</head>\\n\\n<body>\\n    <div id=\\\"number-display\\\">0</div>\\n\\n    <script>\\n        const numberDisplay = document.getElementById('number-display');\\n        let isAnimating = false;\\n        let animationFrameId;\\n        let startTime;\\n        const duration = 3000; // 进一步延长动画总时长\\n        const slowdownStart = 0.5; // 从50%进度就开始减速（之前是70%）\\n\\n        numberDisplay.addEventListener('click', startAnimation);\\n\\n        function startAnimation() {\\n            if (isAnimating) return;\\n\\n            isAnimating = true;\\n            numberDisplay.classList.remove('highlight');\\n            startTime = Date.now();\\n            animate();\\n        }\\n\\n        function animate() {\\n            const elapsed = Date.now() - startTime;\\n            const progress = Math.min(elapsed / duration, 1);\\n\\n            // 使用更明显的减速缓动函数\\n            const easeProgress = easeOutExpo(progress);\\n            const currentNumber = Math.floor(Math.random() * 100);\\n            numberDisplay.textContent = currentNumber;\\n\\n            if (progress < 1) {\\n                // 重新设计速度曲线，使减速更明显\\n                let speed;\\n                if (progress < slowdownStart) {\\n                    // 加速阶段：快速达到最高速度\\n                    speed = 100 - (progress / slowdownStart) * 90;\\n                } else {\\n                    // 减速阶段：使用指数曲线缓慢减速\\n                    const slowdownProgress = (progress - slowdownStart) / (1 - slowdownStart);\\n                    // 指数函数使减速越来越慢\\n                    speed = 10 + Math.pow(slowdownProgress, 0.3) * 500;\\n                }\\n                speed = Math.max(50, Math.min(speed, 100));\\n                animationFrameId = setTimeout(animate, speed);\\n            } else {\\n                // 添加短暂延迟后显示最终结果，增强停止感\\n                setTimeout(() => {\\n                    const finalNumber = Math.floor(Math.random() * 100);\\n                    numberDisplay.textContent = finalNumber;\\n                    numberDisplay.classList.add('highlight');\\n                    isAnimating = false;\\n                }, 200);\\n            }\\n        }\\n\\n        // 更明显的减速缓动函数\\n        function easeOutExpo(t) {\\n            return t === 1 ? 1 : 1 - Math.pow(2, -10 * t);\\n        }\\n\\n    </script>\\n</body>\\n\\n</html>\"}",
  "type": "html"
}